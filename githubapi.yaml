openapi: 3.0.0
info:
  version: "1.0.0"
  title: "GitHub API Documentation"
  description: "Swagger documentation for GitHub API endpoints."
  
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # Optional, used to indicate token format like JWT or OAuth2 tokens
      
security:
  - BearerAuth: []  # Apply globally to all endpoints, or you can add it per endpoint
servers:
  # Added by API Auto Mocking Plugin
  - description: GitHub API Server
    url: https://api.github.com  
    
    
paths:
  /repos/{owner}/{repo}/commits:
    get:
      summary: "Get commits for a repository"
      description: "Retrieve the list of commits for the specified repository."
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
          description: "Owner of the repository"
        - name: repo
          in: path
          required: true
          schema:
            type: string
          description: "Name of the repository"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "Commits successfully retrieved"
        '401':
          description: "Unauthorized - Requires authentication"
        '403':
          description: "Forbidden - Insufficient permissions"
        '404':
          description: "Not Found - Repository or commits not found"

  /repos/{owner}/{repo}/issues:
    post:
      summary: "Create a new issue in a repository"
      description: "This endpoint allows you to create a new issue in a specified GitHub repository."
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
          description: "Owner of the repository"
        - name: repo
          in: path
          required: true
          schema:
            type: string
          description: "Name of the repository"
      requestBody:
        description: "Details of the new issue to be created"
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: "Title of the issue"
                body:
                  type: string
                  description: "Body content of the issue"
                assignees:
                  type: array
                  items:
                    type: string
                  description: "Usernames to assign the issue to"
      security:
        - BearerAuth: []
      responses:
        '201':
          description: "Issue successfully created"
        '400':
          description: "Bad Request - Invalid input"
        '401':
          description: "Unauthorized - Requires authentication"
        '403':
          description: "Forbidden - Insufficient permissions"
        '404':
          description: "Not Found - Repository not found"
          
  /user:
    get:
      summary: "Get the authenticated user's information"
      description: "Retrieves the details of the authenticated user."
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "User information successfully retrieved"
          content:
            application/json:
              schema:
                type: object
                properties:
                  login:
                    type: string
                    description: "Username"
                  id:
                    type: integer
                    description: "User ID"
                  node_id:
                    type: string
                    description: "Node ID"
                  name:
                    type: string
                    description: "Full name"
        '401':
          description: "Unauthorized - Requires authentication"
        '403':
          description: "Forbidden - Insufficient permissions"
          
  /user/repos:
    get:
      summary: "List repositories for the authenticated user"
      description: "Retrieve a list of repositories owned by the authenticated user."
      security:
        - BearerAuth: []
      responses:
        '200':
          description: "Repositories successfully retrieved"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: "Repository ID"
                    name:
                      type: string
                      description: "Name of the repository"
                    full_name:
                      type: string
                      description: "Full name of the repository"
        '401':
          description: "Unauthorized - Requires authentication"
        '403':
          description: "Forbidden - Insufficient permissions"
        '404':
          description: "Not Found - Repositories not found"
