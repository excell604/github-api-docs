openapi: 3.0.0
info:
  title: GitHub API Documentation
  version: 1.0.0
  description: This documentation covers the GitHub API endpoints for accessing user data and managing repositories.
servers:
  - url: https://api.github.com

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID of the user
        login:
          type: string
          description: The GitHub username
    Repository:
      type: object
      properties:
        id:
          type: integer
          description: The unique ID of the repository
        name:
          type: string
          description: The name of the repository
        owner:
          $ref: '#/components/schemas/User'

security:
  - BearerAuth: []

tags:
  - name: User
    description: Operations related to user information
  - name: Repositories
    description: Operations related to repository management

paths:
  /user:
    get:
      tags:
        - User
      summary: Get authenticated user information
      description: Retrieves information about the currently authenticated GitHub user.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized access

  /repos/{owner}/{repo}:
    get:
      tags:
        - Repositories
      summary: Get repository details
      description: Retrieves information about a specific repository owned by the given user.
      parameters:
        - in: path
          name: owner
          required: true
          schema:
            type: string
          description: The owner of the repository
        - in: path
          name: repo
          required: true
          schema:
            type: string
          description: The repository name
      responses:
        '200':
          description: Repository details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
        '404':
          description: Repository not found

  /users/{username}:
    get:
      tags:
        - User
      summary: Get public user information
      description: Retrieves public information about a GitHub user.
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: The GitHub username to fetch information for
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found


  /user/repos:
    get:
      summary: List repositories for the authenticated user
      security:
        - BearerAuth: []
      description: |
        This endpoint retrieves a list of repositories for the authenticated user.
        You must provide a valid Personal Access Token (PAT) in the Authorization header.
      responses:
        '200':
          description: A list of repositories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1296269
                    name:
                      type: string
                      example: "Hello-World"
                    private:
                      type: boolean
                      example: false
        '401':
          description: Unauthorized - Invalid or missing token


  /repos/{owner}/{repo}:
    get:
      summary: Get repository details
      security:
        - BearerAuth: []
      description: |
        This endpoint retrieves details for a specific repository.
        Provide the owner's GitHub username and the repository name in the path.
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
          description: GitHub username of the repository owner.
        - name: repo
          in: path
          required: true
          schema:
            type: string
          description: Name of the repository.
      responses:
        '200':
          description: Repository details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1296269
                  name:
                    type: string
                    example: "Hello-World"
                  full_name:
                    type: string
                    example: "octocat/Hello-World"
                  private:
                    type: boolean
                    example: false
                  owner:
                    type: object
                    properties:
                      login:
                        type: string
                        example: "octocat"
                      id:
                        type: integer
                        example: 1
        '404':
          description: Repository not found     


  /repos/{owner}/{repo}/issues:
    get:
      summary: List issues for a repository
      security:
        - BearerAuth: []
      description: |
        This endpoint lists the issues for a specific repository.
        You must provide the owner's GitHub username and the repository name in the path.
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
          description: GitHub username of the repository owner.
        - name: repo
          in: path
          required: true
          schema:
            type: string
          description: Name of the repository.
      responses:
        '200':
          description: A list of issues
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: "Found a bug"
                    state:
                      type: string
                      example: "open"
                    user:
                      type: object
                      properties:
                        login:
                          type: string
                          example: "octocat"
        '404':
          description: Repository not found          
